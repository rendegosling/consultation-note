version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    platform: linux/arm64
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env.local
    environment:
      - NODE_ENV=development
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    platform: linux/arm64
    ports:
      - "5000:5000"
    env_file:
      - ./backend/.env.local
    environment:
      - NODE_ENV=development
    depends_on:
      postgres:
        condition: service_healthy
      terraform:
        condition: service_completed_successfully
      localstack:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app_network

  postgres:
    image: postgres:16-alpine
    platform: linux/arm64
    env_file:
      - ./backend/.env.local
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d consultation_note"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  localstack:
    image: localstack/localstack
    ports:
      - "4566:4566"
      - "8080:8080"
    environment:
      - SERVICES=s3,ssm
      - LOCALSTACK_WEB_UI=true
    volumes:
      - "${PWD}/terraform:/terraform"
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - app_network

  terraform:
    image: hashicorp/terraform:latest
    volumes:
      - "${PWD}/terraform:/terraform"
    working_dir: /terraform
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=ap-southeast-2
    depends_on:
      localstack:
        condition: service_healthy
    entrypoint: [""]
    command: >
      sh -c '
        ls -la &&
        terraform init &&
        terraform apply -auto-approve -var-file="dev.tfvars"
      '
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "test -f /terraform/.terraform.lock.hcl"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge